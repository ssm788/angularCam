{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../authentication.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors && ctx_r0.f[\"email\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors && ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, route, router,\n  // private accountService: AccountService,\n  // private alertService: AlertService\n  authenticationService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.loading = false;\n    this.submitted = false;\n    this.userRes = {};\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  submit() {\n    this.submitted = true;\n    // reset alerts on submit\n    //  this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    console.log(\"this.form.value\", this.form.value);\n    this.authenticationService.login(this.form.value).subscribe(res => {\n      this.userRes = res;\n      console.log(\"res\", res.token);\n      console.log('user login successfully!');\n      localStorage.setItem('jwtToken', 'Value');\n      this.router.navigateByUrl('post/index');\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"email\"].touched && ctx.f[\"email\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"password\"].touched && ctx.f[\"password\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAMA,SAAiCA,UAAU,QAAmB,gBAAgB;;;;;;;;ICO1DC,2BAAgE;IAAAA,kCAAkB;IAAAA,iBAAM;;;;;IAD5FA,+BAAiF;IAC7EA,sEAAwF;IAC5FA,iBAAM;;;;IADIA,eAAwD;IAAxDA,uFAAwD;;;;;IAY9DA,2BAAsE;IAAAA,qCAAqB;IAAAA,iBAAM;;;;;IADrGA,+BAAuF;IACnFA,uEAAiG;IACrGA,iBAAM;;;;IADIA,eAA8D;IAA9DA,6FAA8D;;;ADbxF,OAAM,MAAOC,cAAc;EAMvBC,YACYC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;EACtB;EACA;EACOC,qBAA4C;IAL3C,gBAAW,GAAXH,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAGP,0BAAqB,GAArBC,qBAAqB;IAThC,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;IACjB,YAAO,GAAC,EAAE;EAQN;EAEJC,QAAQ;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAC9BC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACrC,CAAC;EACN;EAEA;EACA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAAE;EAErCC,MAAM;IACF,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACF;IAEE;IACA,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;MACnB;;IAGJ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAC,IAAI,CAACZ,IAAI,CAACa,KAAK,CAAC;IAC9C,IAAI,CAACf,qBAAqB,CAACgB,KAAK,CAAC,IAAI,CAACd,IAAI,CAACa,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAI;MACtE,IAAI,CAACC,OAAO,GAACD,GAAG;MAChBL,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEI,GAAG,CAACE,KAAK,CAAC;MAC7BP,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCO,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;MACzC,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAAC,YAAY,CAAC;IAC5C,CAAC,CAAC;EAEH;;AA9CS5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BlC,8BAAkB;MACUA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACMA;QAAA,OAAYmC,YAAQ;MAAA,EAAC;MAE1CnC,8BAAwB;MACDA,sBAAM;MAAAA,iBAAQ;MACjCA,2BAIyB;MACzBA,+DAEM;MACVA,iBAAM;MAENA,+BAAwB;MACEA,0BAAS;MAAAA,iBAAQ;MACvCA,4BAIyB;MACzBA,iEAEM;MACVA,iBAAM;MAONA,mCAAuE;MAAAA,uBAAM;MAAAA,iBAAS;;;MA/BpFA,eAAkB;MAAlBA,oCAAkB;MASVA,eAA8C;MAA9CA,uEAA8C;MAY9CA,eAAoD;MAApDA,6EAAoD;MAUhBA,eAAwB;MAAxBA,0CAAwB","names":["Validators","i0","LoginComponent","constructor","formBuilder","route","router","authenticationService","ngOnInit","form","group","email","required","password","f","controls","submit","submitted","invalid","loading","console","log","value","login","subscribe","res","userRes","token","localStorage","setItem","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\shyam\\PIP\\angular\\my-crud-app\\angularCam\\src\\app\\post\\login\\login.component.ts","F:\\shyam\\PIP\\angular\\my-crud-app\\angularCam\\src\\app\\post\\login\\login.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from '../post';\nimport { AuthenticationService } from '../authentication.service';\nimport { FormGroup, FormControl, Validators,FormBuilder} from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    \n  form!: FormGroup;\n    loading = false;\n    submitted = false;\n    userRes={};\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        // private accountService: AccountService,\n        // private alertService: AlertService\n       private authenticationService: AuthenticationService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n          email: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    submit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n      //  this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        console.log(\"this.form.value\",this.form.value);\n        this.authenticationService.login(this.form.value).subscribe((res:any) => {\n          this.userRes=res;\n          console.log(\"res\", res.token);\n          console.log('user login successfully!');\n          localStorage.setItem('jwtToken', 'Value');\n          this.router.navigateByUrl('post/index');\n     })\n\n    }  \n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  \n            <div class=\"form-group\">\n                <label for=\"email\">email:</label>\n                <input \n                    formControlName=\"email\"\n                    id=\"email\" \n                    type=\"text\" \n                    class=\"form-control\">\n                <div *ngIf=\"f['email'].touched && f['email'].invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f['email'].errors && f['email'].errors['required']\">email is required.</div>\n                </div>\n            </div>\n    \n            <div class=\"form-group\">\n                <label for=\"password\">password:</label>\n                <input \n                    formControlName=\"password\"\n                    id=\"password\" \n                    type=\"text\" \n                    class=\"form-control\">\n                <div *ngIf=\"f['password'].touched && f['password'].invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f['password'].errors && f['password'].errors['required']\">password is required.</div>\n                </div>\n            </div>\n    \n           \n           \n      \n           \n      \n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n        </form>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}