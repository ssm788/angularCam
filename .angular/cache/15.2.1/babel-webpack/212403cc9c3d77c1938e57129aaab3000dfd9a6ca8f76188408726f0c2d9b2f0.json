{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/post/\", a1, \"view\"];\n};\nconst _c1 = function (a1) {\n  return [\"/post/\", a1, \"edit\"];\n};\nfunction IndexComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 5);\n    i0.ɵɵtext(7, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 6);\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function IndexComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deletePost(post_r1.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.idcamera);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.cameraName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, post_r1.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c1, post_r1.id));\n  }\n}\nexport class IndexComponent {\n  /*------------------------------------------\r\n  --------------------------------------------\r\n  Created constructor\r\n  --------------------------------------------\r\n  --------------------------------------------*/\n  constructor(postService) {\n    this.postService = postService;\n    this.posts = [];\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  ngOnInit() {\n    this.postService.getAll().subscribe(data => {\n      this.posts = data;\n      console.log(this.posts);\n    });\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  deletePost(id) {\n    this.postService.delete(id).subscribe(res => {\n      this.posts = this.posts.filter(item => item.id !== id);\n      console.log('Post deleted successfully!');\n    });\n  }\n}\nIndexComponent.ɵfac = function IndexComponent_Factory(t) {\n  return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n};\nIndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IndexComponent,\n  selectors: [[\"app-index\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/post/create/\", 1, \"btn\", \"btn-success\"], [1, \"table\", \"table-striped\"], [\"width\", \"250px\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"btn\", \"btn-info\", 3, \"routerLink\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function IndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Angular 14 CRUD Example - ItSolutionStuff.com\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Create New Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 2)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 3);\n      i0.ɵɵtext(15, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, IndexComponent_tr_17_Template, 12, 8, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;IAecA,0BAA+B;IACzBA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAI9BA,0BAAI;IAC0EA,oBAAI;IAAAA,iBAAI;IACpFA,4BAA+E;IAAAA,oBAAI;IAAAA,iBAAI;IACvFA,kCAA2E;IAArDA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAAwBA,uBAAM;IAAAA,iBAAS;;;;IARxFA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAAqB;IAArBA,wCAAqB;IAKXA,eAA0C;IAA1CA,mEAA0C;IAC1CA,eAA0C;IAA1CA,mEAA0C;;;ACdxE,OAAM,MAAOC,cAAc;EAIzB;;;;;EAKAC,YAAmBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAP9B,UAAK,GAAW,EAAE;EAO6B;EAE/C;;;;;EAKAC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,MAAM,EAAE,CAACC,SAAS,CAAEC,IAAY,IAAG;MAClD,IAAI,CAACC,KAAK,GAAGD,IAAI;MACjBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC;IACzB,CAAC,CAAC;EACJ;EAEA;;;;;EAKAG,UAAU,CAACC,EAAS;IAClB,IAAI,CAACT,WAAW,CAACU,MAAM,CAACD,EAAE,CAAC,CAACN,SAAS,CAACQ,GAAG,IAAG;MACvC,IAAI,CAACN,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MACtDH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC9C,CAAC,CAAC;EACJ;;AAjCWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3BrB,8BAAuB;MACfA,6DAA6C;MAAAA,iBAAK;MAEtDA,4BAA+D;MAAAA,+BAAe;MAAAA,iBAAI;MAElFA,gCAAmC;MAGnBA,kBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,8BAAkB;MAAAA,uBAAM;MAAAA,iBAAK;MAGrCA,8BAAO;MACDA,gEAWK;MACXA,iBAAQ;;;MAZmBA,gBAAQ;MAARA,mCAAQ","names":["i0","IndexComponent","constructor","postService","ngOnInit","getAll","subscribe","data","posts","console","log","deletePost","id","delete","res","filter","item","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\shyam\\PIP\\angular\\my-crud-app\\src\\app\\post\\index\\index.component.html","F:\\shyam\\PIP\\angular\\my-crud-app\\src\\app\\post\\index\\index.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h1>Angular 14 CRUD Example - ItSolutionStuff.com</h1>\n    \n    <a href=\"#\" routerLink=\"/post/create/\" class=\"btn btn-success\">Create New Post</a>\n      \n    <table class=\"table table-striped\">\n        <thead>\n              <tr>\n                <th>ID</th>\n                <th>Title</th>\n                <th>Body</th>\n                <th width=\"250px\">Action</th>\n              </tr>\n        </thead>\n        <tbody>\n              <tr *ngFor=\"let post of posts\">\n                <td>{{ post.idcamera }}</td>\n                <td>{{ post.cameraName }}</td>\n                <!-- <td>{{ post.lat }}</td> -->\n                <!-- <td>{{ post.longit }}</td> -->\n                <!-- <td>{{ post.poleId }}</td> -->\n                <td>\n                  <a href=\"#\" [routerLink]=\"['/post/', post.id, 'view']\" class=\"btn btn-info\">View</a>\n                  <a href=\"#\" [routerLink]=\"['/post/', post.id, 'edit']\" class=\"btn btn-primary\">Edit</a>\n                  <button type=\"button\" (click)=\"deletePost(post.id)\" class=\"btn btn-danger\">Delete</button>\n                </td>\n              </tr>\n        </tbody>\n    </table>\n </div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { Post } from '../post';\n      \n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n      \n  posts: Post[] = [];\n    \n  /*------------------------------------------\n  --------------------------------------------\n  Created constructor\n  --------------------------------------------\n  --------------------------------------------*/\n  constructor(public postService: PostService) { }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  ngOnInit(): void {\n    this.postService.getAll().subscribe((data: Post[])=>{\n      this.posts = data;\n      console.log(this.posts);\n    })  \n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  deletePost(id:number){\n    this.postService.delete(id).subscribe(res => {\n         this.posts = this.posts.filter(item => item.id !== id);\n         console.log('Post deleted successfully!');\n    })\n  }\n    \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}