{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  /*------------------------------------------\r\n  --------------------------------------------\r\n  Created constructor\r\n  --------------------------------------------\r\n  --------------------------------------------*/\n  constructor(postService, router) {\n    this.postService = postService;\n    this.router = router;\n    this.loading = false;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  ngOnInit() {\n    this.form = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  get f() {\n    return this.form.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    console.log(this.form.value);\n    this.postService.create(this.form.value).subscribe(res => {\n      console.log('Post created successfully!');\n      this.router.navigateByUrl('post/index');\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 11,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"button\", 9);\n      i0.ɵɵtemplate(17, LoginComponent_span_17_Template, 1, 0, \"span\", 10);\n      i0.ɵɵtext(18, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"a\", 11);\n      i0.ɵɵtext(20, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.username.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAO,gBAAgB;;;;;;;;ICG9CC,2BAAwC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IADtEA,+BAAqE;IACjEA,sEAAkE;IACtEA,iBAAM;;;;IADIA,eAAgC;IAAhCA,wDAAgC;;;;;IAOtCA,2BAAwC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IADtEA,+BAAqE;IACjEA,uEAAkE;IACtEA,iBAAM;;;;IADIA,eAAgC;IAAhCA,wDAAgC;;;;;IAKtCA,2BAA2E;;;;;;;;ADT/F,OAAM,MAAOC,cAAc;EAIzB;;;;;EAKAC,YACSC,WAAwB,EACvBC,MAAc;IADf,gBAAW,GAAXD,WAAW;IACV,WAAM,GAANC,MAAM;IARhB,YAAO,GAAG,KAAK;EASX;EAEJ;;;;;EAKAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIT,SAAS,CAAC;MACxBU,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACS,QAAQ;KAClD,CAAC;EACJ;EAEA;;;;;EAKA,IAAIE,CAAC;IACH,OAAO,IAAI,CAACJ,IAAI,CAACK,QAAQ;EAC3B;EAEA;;;;;EAKAC,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC;IAC5B,IAAI,CAACZ,WAAW,CAACa,MAAM,CAAC,IAAI,CAACV,IAAI,CAACS,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAI;MAC1DL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,IAAI,CAACV,MAAM,CAACe,aAAa,CAAC,YAAY,CAAC;IAC5C,CAAC,CAAC;EACJ;;AA9CWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BxB,8BAAkB;MACUA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACMA;QAAA,OAAYyB,cAAU;MAAA,EAAC;MAC5CzB,8BAAkB;MACYA,wBAAQ;MAAAA,iBAAQ;MAC1CA,2BAAkI;MAClIA,+DAEM;MACVA,iBAAM;MACNA,+BAAkB;MACYA,yBAAQ;MAAAA,iBAAQ;MAC1CA,4BAAsI;MACtIA,iEAEM;MACVA,iBAAM;MACNA,4BAAK;MAEGA,oEAA2E;MAC3EA,wBACJ;MAAAA,iBAAS;MACTA,8BAAiD;MAAAA,yBAAQ;MAAAA,iBAAI;;;MApB/DA,eAAkB;MAAlBA,oCAAkB;MAGmDA,eAA4D;MAA5DA,4FAA4D;MACzHA,eAAoC;MAApCA,6DAAoC;MAM6BA,eAA4D;MAA5DA,4FAA4D;MAC7HA,eAAoC;MAApCA,6DAAoC;MAKlCA,eAAoB;MAApBA,sCAAoB;MACjBA,eAAa;MAAbA,kCAAa","names":["FormGroup","FormControl","Validators","i0","LoginComponent","constructor","postService","router","ngOnInit","form","username","required","password","f","controls","submit","console","log","value","create","subscribe","res","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\shyam\\PIP\\angular\\my-crud-app\\angularCam\\src\\app\\post\\login\\login.component.ts","F:\\shyam\\PIP\\angular\\my-crud-app\\angularCam\\src\\app\\post\\login\\login.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from '../post';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    \n  form!: FormGroup;\n  loading = false;\n  /*------------------------------------------\n  --------------------------------------------\n  Created constructor\n  --------------------------------------------\n  --------------------------------------------*/\n  constructor(\n    public postService: PostService,\n    private router: Router\n  ) { }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  get f(){\n    return this.form.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){\n    console.log(this.form.value);\n    this.postService.create(this.form.value).subscribe((res:any) => {\n         console.log('Post created successfully!');\n         this.router.navigateByUrl('post/index');\n    })\n  }\n  \n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div>\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}